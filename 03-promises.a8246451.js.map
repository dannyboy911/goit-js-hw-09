{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAUC,SAASC,eAAe,WAExCD,SAASE,cAAc,SAASC,iBAAiB,UAAU,SAACC,GAC1DA,EAAMC,iBAENN,EAAQO,MAAMC,QAAU,QAUxB,IARA,IAAMC,EAAQC,OAAOL,EAAMM,OAAOnB,MAAMoB,OAClCC,EAAOH,OAAOL,EAAMM,OAAOE,KAAKD,OAChCE,EAASJ,OAAOL,EAAMM,OAAOG,OAAOF,OAEtCG,EAAoB,EACpBC,EAAoB,EACpBC,EAAmB,EAEdC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAEhC5B,EAAc4B,EADOT,GAASS,EAAI,GAAKL,GAEpCM,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,OACpEwB,G,IAEHS,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,OACnEyB,G,IAEDU,SAAQ,aACPZ,IAC0BD,IACxBd,EAAQO,MAAMC,QAAU,OACxBa,EAAAjC,GAASkC,OAAOM,KAAK,YAA4CJ,OAAhCR,EAAkB,gBAA+BQ,OAAjBP,EAAiB,c","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst spinner = document.getElementById('spinner');\n\ndocument.querySelector('.form').addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  spinner.style.display = 'block';\n\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n\n  let completedPromises = 0;\n  let fulfilledPromises = 0;\n  let rejectedPromises = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        fulfilledPromises++;\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        rejectedPromises++;\n      })\n      .finally(() => {\n        completedPromises++;\n        if (completedPromises === amount) {\n          spinner.style.display = 'none';\n          Notiflix.Notify.info(`Summary: ${fulfilledPromises} fulfilled, ${rejectedPromises} rejected`);\n        }\n      });\n  }\n});\n\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$spinner","document","getElementById","querySelector","addEventListener","event","preventDefault","style","display","delay1","Number","target","value","step","amount","completedPromises","fulfilledPromises","rejectedPromises","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","info"],"version":3,"file":"03-promises.a8246451.js.map"}