{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAUC,SAASC,eAAe,WAExCD,SAASE,cAAc,SAASC,iBAAiB,UAAWC,IAC1DA,EAAMC,iBAENN,EAAQO,MAAMC,QAAU,QAExB,MAAMC,EAAQC,OAAOL,EAAMM,OAAOnB,MAAMoB,OAClCC,EAAOH,OAAOL,EAAMM,OAAOE,KAAKD,OAChCE,EAASJ,OAAOL,EAAMM,OAAOG,OAAOF,OAE1C,IAAIG,EAAoB,EACpBC,EAAoB,EACpBC,EAAmB,EAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAEhC5B,EAAc4B,EADOT,GAASS,EAAI,GAAKL,GAEpCM,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqB/B,QAAiBC,OAC5DwB,GAAiB,IAEpBO,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBjC,QAAeC,OAC3DyB,GAAkB,IAEnBQ,SAAQ,KACPV,IACIA,IAAsBD,IACxBd,EAAQO,MAAMC,QAAU,OACxBY,EAAAhC,GAASiC,OAAOK,KAAK,YAAYV,gBAAgCC,c","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst spinner = document.getElementById('spinner');\n\ndocument.querySelector('.form').addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  spinner.style.display = 'block';\n\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n\n  let completedPromises = 0;\n  let fulfilledPromises = 0;\n  let rejectedPromises = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        fulfilledPromises++;\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        rejectedPromises++;\n      })\n      .finally(() => {\n        completedPromises++;\n        if (completedPromises === amount) {\n          spinner.style.display = 'none';\n          Notiflix.Notify.info(`Summary: ${fulfilledPromises} fulfilled, ${rejectedPromises} rejected`);\n        }\n      });\n  }\n});\n\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$spinner","document","getElementById","querySelector","addEventListener","event","preventDefault","style","display","delay1","Number","target","value","step","amount","completedPromises","fulfilledPromises","rejectedPromises","i","then","$parcel$interopDefault","Notify","success","catch","failure","finally","info"],"version":3,"file":"03-promises.ed9fc5cd.js.map"}